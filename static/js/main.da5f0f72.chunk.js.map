{"version":3,"sources":["components/From.jsx","components/Weather.jsx","App.js","index.js"],"names":["Form","props","className","error","role","onSubmit","loadweather","type","name","autoComplete","placeholder","Weather","city","weatherIcon","description","charAt","toUpperCase","slice","temp_celsius","minmaxTemp","temp_min","temp_max","min","max","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","process","api_call","json","response","setState","sys","celsius","calCelsius","main","temp","weather","get_WeatherIcon","id","console","log","state","undefined","icon","Thunderstom","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeID","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da5f0f72.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = (props) => {\n\treturn (\n\t\t<div className=\"container h-100 \">\n\t\t\t<h1 className=\"text-center title\">Meteorology</h1>\n\t\t\t<div>{props.error ? error() : null}</div>\n\t\t\t<form onSubmit={props.loadweather}>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-3 offset-md-2\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tname=\"city\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tplaceholder=\"Ciudad\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tname=\"country\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tplaceholder=\"País\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-3 col-sm-12 mt-md-0 mt-2\">\n\t\t\t\t\t\t<button className=\"btn btn-primary w-sm-100\">\n\t\t\t\t\t\t\tObtener el clima\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nfunction error() {\n\treturn (\n\t\t<div className=\"alert alert-danger mx-5\" role=\"alert\">\n\t\t\tPor favor ingrese ciudad y país\n\t\t</div>\n\t);\n}\n\nexport default Form;\n","import React from \"react\";\n\nconst Weather = (props) => {\n\treturn (\n\t\t<div className=\"container text-light text-center\">\n\t\t\t<div className=\"Card \">\n\t\t\t\t<h1 className=\"text-white py-3 \">{props.city}</h1>\n\t\t\t\t<h5 className=\"py-4 \">\n\t\t\t\t\t<i className={`wi ${props.weatherIcon} display-1`} />\n\t\t\t\t</h5>\n\t\t\t\t{/* Descripcion del clima */}\n\t\t\t\t<p className=\"py-3 description\">\n\t\t\t\t\t{props.description.charAt(0).toUpperCase() +\n\t\t\t\t\t\tprops.description.slice(1)}\n\t\t\t\t</p>\n\t\t\t\t{props.temp_celsius ? (\n\t\t\t\t\t<h1 className=\"py-2 \">{props.temp_celsius}&deg;c</h1>\n\t\t\t\t) : null}\n\t\t\t\t{/* Mostrar temperatura max y min */}\n\t\t\t\t{minmaxTemp(props.temp_min, props.temp_max)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Weather;\n\nfunction minmaxTemp(min, max) {\n\tif (min && max) {\n\t\treturn (\n\t\t\t<h3>\n\t\t\t\t<span className=\"px-4 \">{min}&deg;C</span>\n\t\t\t\t<span className=\"px-4 \">{max}&deg;C</span>\n\t\t\t</h3>\n\t\t);\n\t}\n}\n","import React from \"react\";\n\nimport \"./sass/app.scss\";\n\nimport Form from \"./components/From\";\nimport \"weather-icons/css/weather-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// git project https://github.com/erikflowers/weather-icons\nimport Weather from \"./components/Weather\";\n\n// const API_key = process.env.REACT_APP_API_KEY;\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcity: undefined,\n\t\t\tcountry: undefined,\n\t\t\ticon: undefined,\n\t\t\tmain: undefined,\n\t\t\tcelsius: undefined,\n\t\t\ttemp_max: undefined,\n\t\t\ttemp_min: undefined,\n\t\t\tdescription: \"\",\n\t\t\terror: false,\n\t\t};\n\n\t\tthis.weatherIcon = {\n\t\t\tThunderstom: \"wi-thunderstorm\",\n\t\t\tDrizzle: \"wi-sleet\",\n\t\t\tRain: \"wi-storm-showers\",\n\t\t\tSnow: \"wi-snow\",\n\t\t\tAtmosphere: \"wi-fog\",\n\t\t\tClear: \"wi-day-sunny\",\n\t\t\tClouds: \"wi-day-fog\",\n\t\t};\n\t}\n\n\t// Convertir kelvin a Celsius\n\tcalCelsius(temp) {\n\t\tlet cell = Math.floor(temp - 273.15);\n\t\treturn cell;\n\t}\n\n\tget_WeatherIcon(icons, rangeID) {\n\t\tswitch (true) {\n\t\t\tcase rangeID >= 200 && rangeID <= 232:\n\t\t\t\tthis.setState({ icon: this.weatherIcon.Thunderstom });\n\t\t\t\tbreak;\n\t\t\tcase rangeID >= 300 && rangeID <= 321:\n\t\t\t\tthis.setState({ icon: this.weatherIcon.Drizzle });\n\t\t\t\tbreak;\n\t\t\tcase rangeID >= 500 && rangeID <= 531:\n\t\t\t\tthis.setState({ icon: this.weatherIcon.Rain });\n\t\t\t\tbreak;\n\t\t\tcase rangeID >= 600 && rangeID <= 622:\n\t\t\t\tthis.setState({ icon: this.weatherIcon.Snow });\n\t\t\t\tbreak;\n\t\t\tcase rangeID >= 701 && rangeID <= 781:\n\t\t\t\tthis.setState({ icon: this.weatherIcon.Atmosphere });\n\t\t\t\tbreak;\n\t\t\tcase rangeID === 800:\n\t\t\t\tthis.setState({ icon: this.weatherIcon.Clear });\n\t\t\t\tbreak;\n\t\t\tcase rangeID >= 801 && rangeID <= 804:\n\t\t\t\tthis.setState({ icon: this.weatherIcon.Clouds });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.setState({ icon: this.weatherIcon.Clouds });\n\t\t}\n\t}\n\n\tgetWeather = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst city = e.target.elements.city.value;\n\t\tconst country = e.target.elements.country.value;\n\n\t\tif (city && country) {\n\t\t\tconst api_call = await fetch(\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${process.env.REACT_APP_API_KEY}&lang=es`\n\t\t\t);\n\t\t\tconst response = await api_call.json();\n\n\t\t\tthis.setState({\n\t\t\t\tcity: `${response.name},${response.sys.country}`,\n\t\t\t\tcelsius: this.calCelsius(response.main.temp),\n\t\t\t\ttemp_max: this.calCelsius(response.main.temp_max),\n\t\t\t\ttemp_min: this.calCelsius(response.main.temp_min),\n\t\t\t\tdescription: response.weather[0].description,\n\t\t\t\terror: false,\n\t\t\t});\n\n\t\t\t//iconos\n\t\t\tthis.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n\n\t\t\tconsole.log(response);\n\t\t} else {\n\t\t\tthis.setState({ error: true });\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Form loadweather={this.getWeather} error={this.state.error} />\n\t\t\t\t<Weather\n\t\t\t\t\tcity={this.state.city}\n\t\t\t\t\tcountry={this.state.country}\n\t\t\t\t\ttemp_celsius={this.state.celsius}\n\t\t\t\t\ttemp_max={this.state.temp_max}\n\t\t\t\t\ttemp_min={this.state.temp_min}\n\t\t\t\t\tdescription={this.state.description}\n\t\t\t\t\tweatherIcon={this.state.icon}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}